Basic built-in terminal commands
Enough talk — let’s start looking at some terminal commands! Out of the box, here are just a few of the things the command line can do, along with names of relevant tools in each case:

Navigate your computer’s file system along with base level tasks such as create, copy, rename and delete:
Move around your directory structure: cd
Create directories: mkdir
Create files (and modify their metadata): touch
Copy files: cp
Move files: mv
Delete files or directories: rm
Download files found at specific URLs: curl
Search for fragments of text inside larger bodies of text: grep
View a file's contents page by page: less, cat
Manipulate and transform streams of text (for example changing all the instances of <div>s in an HTML file to <article>): awk, tr, sed


Creating, copying, moving, removing
There are a number of other basic utility commands that you’ll probably end up using quite a lot as you work with the terminal. They are pretty simple, so we won’t explain them all in quite as much detail as the previous couple.

Have a play with them in a test directory you’ve created somewhere so that you don’t accidentally delete anything important, using the example commands below for guidance:

mkdir — this creates a new directory inside the current directory you are in, with the name you provide after the command name. For example, mkdir my-awesome-website will make a new directory called my-awesome-website.

rmdir — removes the named directory, but only if it’s empty. For example rmdir my-awesome-website will remove the directory we created above. If you want to remove a directory that is not empty (and also remove everything it contains), then you can use the -r option (recursive), but this is dangerous. Make sure there is nothing you might need inside the directory later on, as it will be gone forever.

touch — creates a new empty file, inside the current directory. For example, touch mdn-example.md creates a new empty file called mdn-example.md.

mv — moves a file from the first specified file location to the second specified file location, for example mv mdn-example.md mdn-example.txt (the locations are written as file paths). This command moves a file called mdn-example.md in the current directory to a file called mdn-example.txt in the current directory. Technically the file is being moved, but from a practical perspective, this command is actually renaming the file.

cp — similar in usage to mv, cp creates a copy of the file in the first location specified, in the second location specified. For example, cp mdn-example.txt mdn-example.txt.bak creates a copy of mdn-example.txt called mdn-example.txt.bak (you can of course call it something else if you wish).

rm — removes the specified file. For example, rm mdn-example.txt deletes a single file called mdn-example.txt. Note that this delete is permanent and can’t be undone via the recycle bin that you might have on your desktop user interface.

Linux command line bash
https://www.freecodecamp.org/news/linux-command-line-bash-tutorial/

Usage
head [options] [file_name(s)]
Most used options:

-n N, prints out the first N lines of the file(s)
-q, doesn’t print out the file headers
-v, always prints out the file headers
Example
head file.txt
Prints in terminal the first ten lines of file.txt (default)

head -n 7 file.txt
Prints in terminal the first seven lines of file.txt

head -q -n 5 file1.txt file2.txt
Print in terminal the first 5 lines of file1.txt, followed by the first 5 lines of file2.txt

Shoild know
https://www.freecodecamp.org/news/basic-linux-commands-bash-tips-you-should-know/





